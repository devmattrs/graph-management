function y(){}function k(t,n){for(const e in n)t[e]=n[e];return t}function w(t){return t()}function M(){return Object.create(null)}function j(t){t.forEach(w)}function E(t){return typeof t=="function"}function U(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}function A(t){return Object.keys(t).length===0}function v(t,...n){if(t==null){for(const o of n)o(void 0);return y}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function B(t,n,e){t.$$.on_destroy.push(v(n,e))}function D(t,n,e,o){if(t){const r=m(t,n,e,o);return t[0](r)}}function m(t,n,e,o){return t[1]&&o?k(e.ctx.slice(),t[1](o(n))):e.ctx}function F(t,n,e,o){if(t[2]&&o){const r=t[2](o(e));if(n.dirty===void 0)return r;if(typeof r=="object"){const l=[],d=Math.max(n.dirty.length,r.length);for(let u=0;u<d;u+=1)l[u]=n.dirty[u]|r[u];return l}return n.dirty|r}return n.dirty}function P(t,n,e,o,r,l){if(r){const d=m(n,e,o,l);t.p(d,r)}}function S(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let o=0;o<e;o++)n[o]=-1;return n}return-1}function G(t){const n={};for(const e in t)e[0]!=="$"&&(n[e]=t[e]);return n}function H(t){return t&&E(t.destroy)?t.destroy:y}let f;function _(t){f=t}function i(){if(!f)throw new Error("Function called outside component initialization");return f}function I(t){i().$$.before_update.push(t)}function J(t){i().$$.on_mount.push(t)}function K(t){i().$$.after_update.push(t)}function L(t){i().$$.on_destroy.push(t)}function N(t,n){return i().$$.context.set(t,n),n}const a=[],b=[];let c=[];const g=[],x=Promise.resolve();let p=!1;function O(){p||(p=!0,x.then(z))}function Q(){return O(),x}function q(t){c.push(t)}const h=new Set;let s=0;function z(){if(s!==0)return;const t=f;do{try{for(;s<a.length;){const n=a[s];s++,_(n),C(n.$$)}}catch(n){throw a.length=0,s=0,n}for(_(null),a.length=0,s=0;b.length;)b.pop()();for(let n=0;n<c.length;n+=1){const e=c[n];h.has(e)||(h.add(e),e())}c.length=0}while(a.length);for(;g.length;)g.pop()();p=!1,h.clear(),_(t)}function C(t){if(t.fragment!==null){t.update(),j(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(q)}}function R(t){const n=[],e=[];c.forEach(o=>t.indexOf(o)===-1?n.push(o):e.push(o)),e.forEach(o=>o()),c=n}export{w as A,a as B,O as C,K as a,b,N as c,D as d,F as e,L as f,S as g,B as h,H as i,E as j,k,G as l,I as m,y as n,J as o,M as p,z as q,j as r,U as s,Q as t,P as u,A as v,q as w,R as x,f as y,_ as z};
